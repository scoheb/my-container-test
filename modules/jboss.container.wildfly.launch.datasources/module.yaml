artifacts: []
description: Installs the $JBOSS_HOME/bin/launch files to adjust the datasource config
envs:
- description: It is used to define the mapping prefixes for internal datasources.
    The allowed value for this variable is a comma-separated list of POOLNAME-DATABASETYPE=PREFIX
    triplets, where POOLNAME is used as the pool-name in the datasource, DATABASETYPE
    is the database driver to use, PREFIX is the prefix used in the names of environment
    variables that are used to configure the datasource.
  example: test-postgresql=TEST. This creates a datasource with java:jboss/datasources/test_postgresql
    name. Additionally, all the required settings like password and username are expected
    to be provided as environment variables with the TEST_ prefix, for example TEST_USERNAME
    and TEST_PASSWORD
  name: DB_SERVICE_PREFIX_MAPPING
- description: "Defines the database server\u2019s host name or IP address to be used\
    \ in the datasource\u2019s connection-url property."
  example: 192.168.1.3
  name: '[{POOLNAME}_{DATABASETYPE}][{DATASOURCE_NAME}]_SERVICE_HOST'
- description: "Defines the database server\u2019s port for the datasource."
  example: '5432'
  name: '[{POOLNAME}_{DATABASETYPE}][{DATASOURCE_NAME}]_SERVICE_PORT'
- description: When set to true database connections are validated periodically in
    a background thread prior to use. Defaults to false, meaning the validate-on-match
    method is enabled by default instead.
  example: 'true'
  name: '{PREFIX}_BACKGROUND_VALIDATION'
- description: Specifies frequency of the validation, in milliseconds, when the background-validation
    database connection validation mechanism is enabled ({PREFIX}_BACKGROUND_VALIDATION
    variable is set to true). Defaults to 10000.
  example: '30000'
  name: '{PREFIX}_BACKGROUND_VALIDATION_MILLIS'
- description: Specifies a connection checker class that is used to validate connections
    for the particular database in use.
  example: org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker
  name: '{PREFIX}_CONNECTION_CHECKER'
- description: Defines the database name for the datasource.
  example: myDatabase
  name: '{PREFIX}_DATABASE'
- description: Defines Java database driver for the datasource.
  example: postgresql
  name: '{PREFIX}_DRIVER'
- description: Specifies the exception sorter class that is used to properly detect
    and clean up after fatal database connection exceptions.
  example: org.jboss.jca.adapters.jdbc.extensions.mysql.MySQLExceptionSorter
  name: '{PREFIX}_EXCEPTION_SORTER'
- description: Defines the JNDI name for the datasource. Defaults to java:jboss/datasources/POOLNAME_DATABASETYPE,
    where POOLNAME and DATABASETYPE are taken from the triplet described in DB_SERVICE_PREFIX_MAPPING.
    This setting is useful if you want to override the default generated JNDI name."
  example: java:jboss/datasources/test-postgresql
  name: '{PREFIX}_JNDI'
- description: Defines Java Transaction API (JTA) option for the non-XA datasource.
    The XA datasources are already JTA capable by default.
  example: 'true'
  name: '{PREFIX}_JTA'
- description: Defines the maximum pool size option for the datasource.
  example: '20'
  name: '{PREFIX}_MAX_POOL_SIZE'
- description: Defines the minimum pool size option for the datasource.
  example: '1'
  name: '{PREFIX}_MIN_POOL_SIZE'
- description: Defines the datasource as a non-XA datasource. Defaults to false.
  example: 'true'
  name: '{PREFIX}_NONXA'
- description: Defines the password for the datasource.
  example: password
  name: '{PREFIX}_PASSWORD'
- description: Defines the java.sql.Connection transaction isolation level for the
    datasource.
  example: TRANSACTION_READ_UNCOMMITTED
  name: '{PREFIX}_TX_ISOLATION'
- description: Defines connection URL for the datasource.
  example: jdbc:postgresql://localhost:5432/postgresdb
  name: '{PREFIX}_URL'
- description: Defines the username for the datasource.
  example: admin
  name: '{PREFIX}_USERNAME'
execute:
- directory: jboss.container.wildfly.launch.datasources
  module_name: jboss.container.wildfly.launch.datasources
  name: jboss.container.wildfly.launch.datasources/configure.sh
  script: configure.sh
  user: '185'
labels: []
modules:
  install:
  - name: jboss.container.wildfly.launch.os.node-name
  repositories: []
name: jboss.container.wildfly.launch.datasources
osbs: {}
packages:
  install: []
  repositories: []
ports: []
schema_version: 1
version: '1.0'
volumes: []
